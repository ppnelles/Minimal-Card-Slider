html{line-height:1.15;-webkit-text-size-adjust:100%}main{display:block}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}*{box-sizing:border-box}::-moz-selection{background:#3498db;color:#fff;text-shadow:none}::selection{background:#3498db;color:#fff;text-shadow:none}html{font-size:62.5%;-webkit-tap-highlight-color:rgba(0,0,0,0)}body{margin:0;font-family:Georgia,Times,Times New Roman,serif;font-size:1.8rem;line-height:2.4rem;font-weight:400;color:#333;-webkit-font-smoothing:antialiased}figure{margin:0;padding:0}img{display:inline-block;width:auto;max-width:100%;height:auto}p img{margin-bottom:.5em}.site-content{width:90%;max-width:1800px;margin:0 auto}b,strong{font-weight:700}cite,dfn,em,i{font-style:italic}h1,h2,h3,h4{font-family:Helvetica Neue,Helvetica,Arial sans-serif;font-weight:700}h5,h6{font-style:Georgia,Times,"Times New Roman",serif;font-weight:700}h1{font-size:3.6rem;line-height:4rem;margin:0 0 3rem}@media (min-width:46.25em){h1{font-size:5.2rem;line-height:6rem}}h2{font-size:2.8rem;line-height:3rem;margin:0 0 2.5rem}@media (min-width:46.25em){h2{font-size:3.8rem;line-height:4rem}}h3{font-size:2.4rem;line-height:2.8rem;margin:0 0 2rem}@media (min-width:46.25em){h3{font-size:3.2rem;line-height:3.6rem}}h4{font-size:2.1rem;line-height:2.4rem;margin:0 0 2rem}@media (min-width:46.25em){h4{font-size:2.8rem;line-height:3.2rem}}h5{font-size:1.8rem;line-height:2rem;margin:0 0 1rem}@media (min-width:46.25em){h5{font-size:2.4rem;line-height:2.8rem}}h6{font-size:1.8rem;line-height:2rem;margin:0 0 1rem}@media (min-width:46.25em){h6{font-size:2.2rem;line-height:2.4rem}}p{margin:0 0 2rem}ol,ul{margin:0 0 1.5rem;padding:0 0 0 3.5rem}ul li{list-style:disc}ol li{list-style:decimal}pre{background:#eee;font-family:Courier\ 10 Pitch,Courier,monospace;font-size:1.5rem;line-height:1.6;margin-bottom:1.6em;max-width:100%;overflow:auto;padding:1.6em}code,kbd,tt,var{font-family:Monaco,Consolas,Andale Mono,DejaVu Sans Mono,monospace;font-size:1.5rem}abbr,acronym{border-bottom:1px dotted #666;cursor:help}ins,mark{background:#fff9c0;text-decoration:none}.card-slider{width:90%;margin:3em auto 0;overflow:hidden}@media (min-width:46.25em){.card-slider{display:flex;flex-direction:row;justify-content:space-between}}@media (min-width:46.25em){.card-slider header{flex:1 1 25%;padding:0 1.5em 0 0}}.card-slider .inner{overflow:hidden}@media (min-width:46.25em){.card-slider .inner{flex-wrap:wrap;flex:1 1 75%}}.card-slider ul{margin:0;padding:0;width:100%;display:flex;flex-wrap:wrap;position:relative;transition:left .2s ease;left:0}.card-slider ul li{margin:0;padding:0;list-style:none;position:relative;flex:1 0 250px;vertical-align:top;box-sizing:border-box;white-space:normal;padding:0 1.5em 0 0}.card-slider .slider-nav{width:100%;overflow:hidden}.card-slider .slider-nav .disabled{opacity:.4}.card-slider .slide-next{float:right}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
